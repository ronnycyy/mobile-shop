{"version":3,"sources":["components/Footer.tsx","constant/user.ts","models/User.ts","redux/actions/user.ts","components/Header.tsx","components/Message.tsx","constant/cart.ts","models/CartItem.ts","redux/actions/cart.ts","screens/CartScreen.tsx","components/Rating.tsx","components/Product.tsx","constant/product.ts","components/Loading.tsx","screens/HomeScreen.tsx","redux/actions/product.ts","components/PayModal.tsx","constant/order.ts","screens/OrderScreen.tsx","redux/actions/order.ts","components/CheckoutSteps.tsx","components/FormContainer.tsx","screens/PaymentScreen.tsx","models/Order.ts","screens/PlaceOrderScreen.tsx","screens/ProductScreen.tsx","screens/ProfileScreen.tsx","screens/RegisterScreen.tsx","models/ShippingAddress.ts","screens/ShippScreen.tsx","screens/UserListScreen.tsx","screens/UserLoginScreen.tsx","App.tsx","reportWebVitals.ts","models/Base.ts","models/State.ts","redux/store.ts","redux/reducers/product.ts","redux/reducers/cart.ts","redux/reducers/user.ts","redux/reducers/order.ts","index.tsx"],"names":["Footer","Container","Row","Col","className","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_FAILED","USER_LOGOUT","USER_REGISTER","USER_REGISTER_SUCCESS","USER_REGISTER_FAILED","USER_DETAILS","USER_DETAILS_SUCCESS","USER_DETAILS_FAILED","USER_UPDATE","USER_UPDATE_SUCCESS","USER_UPDATE_FAILED","USER_LIST","USER_LIST_SUCCESS","USER_LIST_FAILED","User","id","name","email","token","password","isAdmin","this","getUserDetails","dispatch","getState","a","type","user","userLogin","config","headers","Authorization","axios","get","data","newUser","_id","payload","response","message","Header","useDispatch","useSelector","state","Navbar","bg","variant","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","Message","children","Alert","defaultProps","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CartItem","product","image","price","countInStock","count","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","match","location","history","productId","params","search","split","useEffect","removeItemFromCart","removeFromCart","md","length","ListGroup","map","item","key","Image","src","alt","fluid","rounded","Form","Control","as","value","onChange","e","target","Array","keys","i","Button","Card","reduce","pre","cur","disabled","push","Rating","text","color","fill","v","style","Product","props","Img","Body","Title","Text","rating","numReviews","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILED","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILED","Loading","Spinner","animation","role","width","height","margin","display","position","top","left","HomeScreen","productList","loading","products","error","sm","lg","xl","PayModal","order","show","onHideHandler","Modal","onHide","closeButton","totalPrice","paymentMethod","textAlign","backgroundColor","ORDER_CREATE","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAILED","ORDER_DETAILS","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILED","OrderScreen","orderId","addDecimals","num","toFixed","orderDetails","shippingAddress","productsPrice","orderItems","useState","setShow","setImage","province","city","address","postalCode","href","isDelivered","isPaid","index","shippingPrice","CheckoutSteps","step1","step2","step3","step4","FormContainer","xs","PaymentScreen","setPaymentMethod","onSubmit","preventDefault","Group","Label","Check","label","checked","Order","itemsPrice","PlaceOrderScreen","transCost","totalPay","orderCreate","orderState","success","post","createOrder","ProductScreen","setCount","productDetails","description","ProfileScreen","setEmail","setPassword","setName","confirmPassword","setConfirmPassword","userDetails","updated","loginUser","updatedUser","put","controlId","placeholder","RegisterScreen","setMessage","userRegister","redirect","register","ShippingAddress","ShippScreen","setProvince","setCity","setAddress","setPostalCode","UserListScreen","userList","users","forEach","u","deleteHandler","Table","striped","bordered","hover","responsive","UserLoginScreen","login","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BaseState","OrderState","Cart","ProductList","ProductDetails","UserList","UserLogin","UserRegister","UserDetails","reducer","combineReducers","action","existedItem","find","c","filter","cartItemsFromStorage","getItem","parse","userFromStorage","initialState","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3f12927.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">CopyRight &copy; Ronny的商城</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","export const USER_LOGIN = 'USER_LOGIN';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_REGISTER = 'USER_REGISTER';\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\nexport const USER_REGISTER_FAILED = 'USER_REGISTER_FAILED';\n\nexport const USER_DETAILS = 'USER_DETAILS';\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\nexport const USER_DETAILS_FAILED = 'USER_DETAILS_FAILED';\n\nexport const USER_UPDATE = 'USER_UPDATE';\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\nexport const USER_UPDATE_FAILED = 'USER_UPDATE_FAILED';\n\nexport const USER_LIST = 'USER_LIST';\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\nexport const USER_LIST_FAILED = 'USER_LIST_FAILED';\n","class User {\n  public id: string;\n  public name: string;\n  public email: string;\n  public token: string;\n  public password: string;\n  public isAdmin?: boolean;\n\n  constructor(id: string, name: string, email: string, token: string, password: string) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.token = token;\n    this.password = password;\n  }\n}\n\nexport default User;\n","import { USER_DETAILS, USER_LOGIN, USER_LOGIN_FAILED, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER, USER_REGISTER_FAILED, USER_REGISTER_SUCCESS, USER_DETAILS_FAILED, USER_DETAILS_SUCCESS, USER_UPDATE, USER_UPDATE_SUCCESS, USER_UPDATE_FAILED, USER_LIST, USER_LIST_FAILED, USER_LIST_SUCCESS } from './../../constant/user';\nimport Action from '../../models/Action';\nimport { Dispatch } from 'redux';\nimport axios from 'axios';\nimport User from '../../models/User';\n\nexport const login = (email: string, password: string) => async (dispatch: Dispatch<Action>) => {\n  try {\n    dispatch({ type: USER_LOGIN });\n\n    // 将email和password作为一个json传递给后台\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.post('/api/user/login', { email, password }, config);\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: new User(data._id, data.name, data.email, data.token, data.password) });\n\n    localStorage.setItem('user', JSON.stringify({ ...data, id: data }));\n\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const register = (name: string, email: string, password: string) => async (dispatch: Dispatch<Action>) => {\n  try {\n    dispatch({ type: USER_REGISTER });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const { data } = await axios.post('/api/user/register', { name, email, password }, config);\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem('user', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const getUserDetails = () => async (dispatch: Dispatch<Action>, getState: any) => {\n  try {\n    dispatch({ type: USER_DETAILS });\n\n    const { userLogin: { user } } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user ? user.token : ''}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/user/profile`, config);\n\n    const newUser = new User(data._id, data.name, data.email, data.token, data.password);\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: newUser });\n\n\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const updateUserDetails = (updatedUser: User | null) => async (dispatch: Dispatch<Action>, getState: any) => {\n  try {\n    dispatch({ type: USER_UPDATE });\n\n    const { userLogin: { user } } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user ? user.token : ''}`\n      }\n    }\n\n    const { data } = await axios.put(`/api/user/profile`, updatedUser, config);\n\n    const newUser = new User(data._id, data.name, data.email, data.token, data.password);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: newUser });\n\n\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const listUser = () => async (dispatch: Dispatch<Action>, getState: any) => {\n  try {\n    dispatch({ type: USER_LIST });\n\n    const { userLogin: { user } } = getState();\n\n    const config = {\n      headers: {\n        // 'Content-Type': 'application/json',  不需要传递任何值给后台\n        Authorization: `Bearer ${user ? user.token : ''}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/user`, config);\n\n    let users: User[] = [];\n\n    data.forEach((u: any) => {\n      u.id = u._id;\n\n      delete u._id;\n\n      users.push(u);\n    })\n\n    dispatch({ type: USER_LIST_SUCCESS, payload: users });\n\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const logout = () => (dispatch: Dispatch<Action>) => {\n  localStorage.removeItem('user');\n  dispatch({ type: USER_LOGOUT })\n}\n","import React from 'react';\nimport { Nav, Navbar, Container, NavDropdown } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { State } from '../models/State';\nimport { getUserDetails, logout } from '../redux/actions/user';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state: State) => state.userLogin);\n  const { user } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  const getUserDetailsHandler = () => {\n    dispatch(getUserDetails())\n  }\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Ronny的商城</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>购物车\n                </Nav.Link>\n              </LinkContainer>\n\n              {\n                user ?\n                  (\n                    <NavDropdown title={user.name} id='username'>\n                      <LinkContainer to='/profile'>\n                        <NavDropdown.Item onClick={getUserDetailsHandler}>个人详情</NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Item onClick={logoutHandler}>\n                        退出\n                      </NavDropdown.Item>\n                    </NavDropdown>\n                  )\n                  :\n                  (\n                    <LinkContainer to=\"/login\">\n                      <Nav.Link>\n                        <i className=\"fas fa-user\"></i>登录\n                      </Nav.Link>\n                    </LinkContainer>\n                  )\n              }\n\n              {\n                user && user.isAdmin && (\n                  <NavDropdown title='管理员操作' id='adminMenu'>\n                    <LinkContainer to='/admin/userList'>\n                      <NavDropdown.Item>用户列表</NavDropdown.Item>\n                    </LinkContainer>\n\n                    <LinkContainer to='/admin/productList'>\n                      <NavDropdown.Item>产品列表</NavDropdown.Item>\n                    </LinkContainer>\n\n                    <LinkContainer to='/admin/orderList'>\n                      <NavDropdown.Item>订单列表</NavDropdown.Item>\n                    </LinkContainer>\n                  </NavDropdown>\n                )\n              }\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\nimport MessageParams from '../models/Message'\n\nconst Message = ({ variant, children }: MessageParams) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info'\n}\n\nexport default Message\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\n","class CartItem {\n  public product: string;\n  public name: string;\n  public image: string;\n  public price: number;\n  public countInStock: number;\n  public count: number;\n\n  constructor(product: string, name: string, image: string, price: number, countInStock: number, count: number) {\n    this.product = product;\n    this.name = name;\n    this.image = image;\n    this.price = price;\n    this.countInStock = countInStock;\n    this.count = count;\n  }\n}\n\nexport default CartItem;\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from './../../constant/cart';\nimport axios from \"axios\"\nimport CartItem from '../../models/CartItem';\nimport Action from '../../models/Action';\nimport { Dispatch } from 'redux';\nimport Product from '../../models/Product';\nimport ShippingAddress from '../../models/ShippingAddress';\n\n\nexport const addToCart = (id: string, count: number) => async (dispatch: Dispatch<Action>, getState: any) => {\n  const { data } = await axios.get<Product>(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: new CartItem(data._id, data.name, data.image, data.price, data.countInStock, count)\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\nexport const removeFromCart = (id: string) => async (dispatch: Dispatch<Action>, getState: any) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}\n\n\nexport const saveShippingAddress = (data: ShippingAddress) => async (dispatch: Dispatch<Action>) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data: any) => async (dispatch: Dispatch<Action>) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Col, ListGroup, Row, Image, Form, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/Message';\nimport { State } from '../models/State';\nimport { addToCart, removeFromCart } from '../redux/actions/cart';\n\nconst CartScreen = ({ match, location, history }: any) => {\n  const productId = match.params.id;\n  const count = location.search ? +location.search.split('=')[1] : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state: State) => state.cart);\n\n  // 进入购物车页面有两种情况：一是点击购物车图标，二是点击产品详情页的加入购物车\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, count))\n    }\n  }, [dispatch, productId, count])\n\n  const removeItemFromCart = (id: string) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const goPay = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>购物车</h1>\n        {\n          cart.cartItems.length === 0 ?\n            (\n              <Message variant='info'>\n                购物车空空如也...\n                <Link to='/' className='mx-4'>返回主页</Link>\n              </Message>\n            ) :\n            (\n              <ListGroup variant='flush'>\n                {\n                  cart.cartItems.map((item) => (\n                    <ListGroup.Item key={item.product}>\n                      <Row>\n                        <Col md={2}>\n                          <Image src={item.image} alt={item.name} fluid rounded></Image>\n                        </Col>\n                        <Col md={3}>\n                          <Link to={`/products/${item.product}`}>{item.name}</Link>\n                        </Col>\n                        <Col md={2}>¥{item.price}</Col>\n                        <Col md={2}>\n                          <Form.Control\n                            as='select'\n                            value={item.count}\n                            onChange={(e) => dispatch(addToCart(item.product, +e.target.value))}>\n                            {\n                              [...Array(item.countInStock).keys()].map((i) =>\n                                (\n                                  <option key={i + 1} value={i + 1}>\n                                    {i + 1}\n                                  </option>\n                                ))\n                            }\n                          </Form.Control>\n                        </Col>\n                        <Col md={2}>\n                          <Button type='button' onClick={() => removeItemFromCart(item.product)}>\n                            <i className='fas fa-trash'></i>\n                          </Button>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))\n                }\n              </ListGroup>\n            )\n        }\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>共计({cart.cartItems.reduce<number>((pre, cur) => pre + cur.count, 0)})个产品</h2>\n              ¥{cart.cartItems.reduce<number>((pre, cur) => pre + cur.count * cur.price, 0)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cart.cartItems.length === 0}\n                onClick={goPay}>\n                去支付\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport Rate from '../models/Rate'\n\n\nconst Rating = ({ value, text, color }: Rate) => {\n  return (\n    <div className=\"rating\">\n      {\n        new Array(5).fill(0).map((v, i) => (\n          <span key={i}>\n            <i style={{ color }} className={value >= 1 + i ? 'fas fa-star' : value >= 0.5 + i ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n          </span>\n        ))\n      }\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825'\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom';\nimport Rating from './Rating';\n\nconst Product = (props: any) => {\n  let product = props.product;\n\n  return (\n    <Card className='my-3 py-3 rounded'>\n      <Link to={`/products/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n      <Card.Body>\n        <Link to={`/products/${product._id}`}>\n          <Card.Title>{product.name}</Card.Title>\n        </Link>\n        <Card.Text as='div'>\n          <Rating value={product.rating} text={`${product.numReviews}条评论`}/>\n        </Card.Text>\n        <Card.Text as='h3'>¥{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAILED = 'PRODUCT_LIST_FAILED';\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAILED = 'PRODUCT_DETAILS_FAILED';\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loading = () => {\n  return (\n    <Spinner\n      animation='grow'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        color: 'lightblue'\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loading\n","import React, { useEffect } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../redux/actions/product';\nimport { State } from '../models/State';\nimport Loading from '../components/Loading';\nimport Message from '../components/Message';\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const productList = useSelector((state: State) => state.productList);\n  const { loading, products, error } = productList;\n\n  // 组件初始化时调用，deps为空数组\n  useEffect(() => {\n    dispatch(listProducts())\n  }, [dispatch])\n\n\n  return <>\n    <h1>最新产品</h1>\n\n    {\n      loading ? <Loading /> : error ? <Message variant='danger' children={error} />:\n        (\n          <Row>\n            {\n              products.map((product: any) =>\n                <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\n                  <Product product={product} />\n                </Col>\n              )\n            }\n          </Row>\n        )\n    }\n\n  </>\n}\n\nexport default HomeScreen\n","import { PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILED, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILED } from './../../constant/product';\nimport Action from '../../models/Action';\nimport { Dispatch } from 'redux';\nimport { PRODUCT_LIST_REQUEST } from \"../../constant/product\"\nimport axios from 'axios';\n\nconst listProducts = () => async (dispatch: Dispatch<Action>) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n    const { data } = await axios.get('/api/products');\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nconst listProductDetails = (id: string) => async (dispatch: Dispatch<Action>) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport { listProductDetails, listProducts }\n","import React from 'react'\nimport { Col, Modal, Row, Image, Button } from 'react-bootstrap'\n\n\n\nconst PayModal = ({ order, text, show, onHideHandler, image }: any) => {\n  return (\n    <Modal show={show} onHide={onHideHandler}>\n      <Modal.Header closeButton>\n        <Modal.Title>订单号：{order?._id}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>支付金额： ¥{order?.totalPrice}</p>\n        <p>支付方式： {order?.paymentMethod}</p>\n        <Row>\n          <Col md={6} style={{ textAlign: 'center' }}>\n            <Image src={image}></Image>\n            <p\n              style={{\n                backgroundColor: '#00C800',\n                color: 'white',\n              }}\n            >\n              {text}\n            </p>\n          </Col>\n          <Col>\n            <Image src='/images/saoyisao.jpg' />\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant='primary' onClick={onHideHandler}>\n          关闭\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default PayModal\n\n\n\n\n","export const ORDER_CREATE = 'ORDER_CREATE';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAILED = 'ORDER_CREATE_FAILED';\n\nexport const ORDER_DETAILS = 'ORDER_DETAILS';\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\nexport const ORDER_DETAILS_FAILED = 'ORDER_DETAILS_FAILED';\n","import React, { useEffect, useState } from 'react'\nimport { Col, ListGroup, Row, Image, Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\nimport Message from '../components/Message';\nimport PayModal from '../components/PayModal';\nimport { State } from '../models/State';\nimport { getOrderById } from '../redux/actions/order';\n\nconst OrderScreen = ({ match }: any) => {\n\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const addDecimals = (num: number) => num.toFixed(2);\n  // const cart = useSelector((state: State) => state.cart);\n  const orderDetails = useSelector((state: State) => state.orderDetails)\n  const { loading, order, error } = orderDetails;\n  const shippingAddress = order ? order.shippingAddress : null;\n  const productsPrice = order ? addDecimals(order.orderItems.reduce<number>((pre, cur) => pre + cur.count * cur.price, 0)) : 0;\n\n  // pay modal\n  const [show, setShow] = useState(false);\n  const [image, setImage] = useState('');\n  const [text] = useState('请打开微信扫一扫支付');\n\n  const onHideHandler = () => {\n    setShow(false);\n  }\n  const goPayHandler = () => {\n    setImage(`/images/wechat.jpg`)\n    setShow(true);\n  }\n\n  useEffect(() => {\n    if (!order || order._id !== orderId) {\n      dispatch(getOrderById(orderId));\n    }\n  }, [orderId, order, dispatch])\n\n\n  return (\n    loading ?\n      <Loading />\n      :\n      error ?\n        <Message variant='danger'>{error}</Message>\n        :\n        <>\n          <h1>订单号：{order?._id}</h1>\n          <Row>\n            <Col md={8}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h2>收货地址</h2>\n                  <p>\n                    <strong>姓名：</strong>\n                    {order?.user?.name}\n                  </p>\n                  <p>\n                    <strong>收货地址: </strong>\n                    {shippingAddress?.province},\n                    {shippingAddress?.city},\n                    {shippingAddress?.address}\n                  </p>\n                  <p>\n                    <strong>邮政编码: </strong>\n                    {shippingAddress?.postalCode}\n                  </p>\n                  <p>\n                    <strong>邮箱：</strong>\n                    <a href={`mailto:${order?.user?.email}`}>\n                      {order?.user?.email}\n                    </a>\n                  </p>\n\n                  {\n                    order?.isDelivered ?\n                      <Message variant='success'>已发货</Message>\n                      :\n                      <Message variant='danger'>未发货</Message>\n                  }\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>支付方式</h2>\n                  <p>\n                    <strong>支付方法: </strong>\n                    {order?.paymentMethod}\n                  </p>\n\n                  {\n                    order?.isPaid ?\n                      <Message variant='success'>已支付</Message>\n                      :\n                      <Message variant='danger'>待支付\n                      </Message>\n                  }\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>产品订单</h2>\n                  {\n                    order?.orderItems.length === 0 ?\n                      <Message>购物车为空</Message>\n                      :\n                      <ListGroup variant='flush'>\n                        {\n                          order?.orderItems.map((item, index) =>\n                            <ListGroup.Item key={index}>\n                              <Row>\n                                <Col md={1}>\n                                  <Image src={item.image} alt={item.name} fluid rounded />\n                                </Col>\n                                <Col>\n                                  <Link to={`/products/${item.product}`}>\n                                    {item.name}\n                                  </Link>\n                                </Col>\n                                <Col md={4}>\n                                  {item.count} * {item.price} = ¥ {item.count * item.price}\n                                </Col>\n                              </Row>\n                            </ListGroup.Item>\n                          )\n                        }\n                      </ListGroup>\n                  }\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <h2>确认账单</h2>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>产品总价</Col>\n                      <Col>\n                        ¥ {productsPrice}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>运费</Col>\n                      <Col>\n                        ¥ {addDecimals(order ? +order.shippingPrice : 0)}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>合计</Col>\n                      <Col>\n                        ¥ {addDecimals(order ? +order.totalPrice : 0)}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Button type='button' className='btn-block' onClick={goPayHandler} disabled={order?.orderItems.length === 0}>\n                      去支付\n                    </Button>\n                  </ListGroup.Item>\n                  <PayModal show={show} order={order} text={text} image={image} onHideHandler={onHideHandler} />\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n  )\n}\n\nexport default OrderScreen\n","import { ORDER_CREATE, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAILED, ORDER_DETAILS, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAILED } from './../../constant/order';\nimport { Dispatch } from \"react\";\nimport Order from \"../../models/Order\";\nimport Action from '../../models/Action';\nimport axios from 'axios';\n\n\nexport const createOrder = (order: Order) => async (dispatch: Dispatch<Action>, getState: any) => {\n  try {\n    dispatch({ type: ORDER_CREATE });\n\n    const { userLogin: { user } } = getState();\n\n    // 传递的是json对象，所以要设置Content-Type: application/json\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n\n    const { data } = await axios.post(`/api/order`, order, config);\n\n    // const responseOrder = new Order(); // TODO: 维护返回值的类型\n\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data })\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n\nexport const getOrderById = (id: string) => async (dispatch: Dispatch<Action>, getState: any) => {\n  try {\n    dispatch({ type: ORDER_DETAILS });\n\n    const { userLogin: { user } } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n\n    const { data } = await axios.get(`/api/order/${id}`, config);\n\n    // const responseOrder = new Order(); // TODO: 维护返回值的类型\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\ninterface ComponentProps {\n  step1?: boolean;\n  step2?: boolean;\n  step3?: boolean;\n  step4?: boolean;\n}\n\nconst CheckoutSteps: React.FunctionComponent<ComponentProps> = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav>\n      <Nav.Item>\n        {\n          step1 ?\n            (\n              <LinkContainer to='/login'>\n                <Nav.Link>登录</Nav.Link>\n              </LinkContainer>\n            ) :\n            (\n              <Nav.Link disabled>登录</Nav.Link>\n            )\n        }\n      </Nav.Item>\n\n      <Nav.Item>\n        {\n          step2 ?\n            (\n              <LinkContainer to='/shipping'>\n                <Nav.Link>收货地址</Nav.Link>\n              </LinkContainer>\n            ) :\n            (\n              <Nav.Link disabled>收货地址</Nav.Link>\n            )\n        }\n      </Nav.Item>\n\n      <Nav.Item>\n        {\n          step3 ?\n            (\n              <LinkContainer to='/payment'>\n                <Nav.Link>支付</Nav.Link>\n              </LinkContainer>\n            ) :\n            (\n              <Nav.Link disabled>支付</Nav.Link>\n            )\n        }\n      </Nav.Item>\n\n      <Nav.Item>\n        {\n          step4 ?\n            (\n              <LinkContainer to='/placeorder'>\n                <Nav.Link>确认下单</Nav.Link>\n              </LinkContainer>\n            ) :\n            (\n              <Nav.Link disabled>确认下单</Nav.Link>\n            )\n        }\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps;","import React from 'react'\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst FormContainer = ({ children }: any) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer;\n","import React, { FormEvent, useState } from 'react'\nimport { Button, Col, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RouteChildrenProps } from 'react-router-dom'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport FormContainer from '../components/FormContainer'\nimport { State } from '../models/State'\nimport { savePaymentMethod } from '../redux/actions/cart'\n\nconst PaymentScreen: React.FunctionComponent<RouteChildrenProps> = ({ history }) => {\n  const cart = useSelector((state: State) => state.cart);\n  const { shippingAddress } = cart;\n  const dispatch = useDispatch();\n\n  if (!shippingAddress) {\n    history.push('/shipping');  // 没有填写收货地址\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('weChat');\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('/placeorder');  // 进入确认下单环节\n  }\n\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n\n      <h1>支付方式</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>选择支付方式</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='微信'\n              id='weChat'\n              name='paymentMethod'\n              value='weChat'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\n\n            <Form.Check\n              type='radio'\n              label='PayPal'\n              id='payPal'\n              name='paymentMethod'\n              value='PayPay'\n              onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>下一步</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import ShippingAddress from './ShippingAddress';\n\nclass Order {\n  public _id: string;\n  public orderItems: any[];\n  public shippingAddress: ShippingAddress;\n  public paymentMethod: string;\n  public itemsPrice: string;  // 商品价格\n  public shippingPrice: string;  // 邮费\n  public totalPrice: string;  // 总价\n  public user?: OrderUser;  // 订单归属用户\n  public isDelivered?: boolean; //是否已发货\n  public isPaid?: boolean;  //是否已支付\n\n  constructor(orderItems: any[], shippingAddress: ShippingAddress, paymentMethod: string, itemsPrice: string, shippingPrice: string, totalPrice: string, _id: string) {\n    this.orderItems = orderItems;\n    this.shippingAddress = shippingAddress;\n    this.paymentMethod = paymentMethod;\n    this.itemsPrice = itemsPrice;\n    this.shippingPrice = shippingPrice;\n    this.totalPrice = totalPrice;\n    this._id = _id;\n  }\n}\n\nclass OrderUser {\n  public _id: string;\n  public name: string;\n  public email: string;\n\n  constructor(id: string, name: string, email: string) {\n    this._id = id;\n    this.name = name;\n    this.email = email;\n  }\n}\n\nexport default Order;\n","import React, { useEffect } from 'react'\nimport { Col, ListGroup, Row, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport Message from '../components/Message'\nimport Order from '../models/Order'\nimport { State } from '../models/State'\nimport { createOrder } from '../redux/actions/order'\n\nconst PlaceOrderScreen: React.FunctionComponent<RouteComponentProps> = ({ history }) => {\n  const cart = useSelector((state: State) => state.cart);\n  const { shippingAddress } = cart;\n  const addDecimals = (num: number) => {\n    return num.toFixed(2);\n  }\n  const dispatch = useDispatch();\n\n  const productsPrice = addDecimals(cart.cartItems.reduce<number>((pre, cur) => pre + cur.count * cur.price, 0));\n  const transCost = addDecimals(+productsPrice > 5000 ? 0 : 20); // 邮费\n  const totalPay = addDecimals(+productsPrice + (+transCost));\n\n  // 提交订单\n  const placeorderHandler = () => {\n    const order = new Order(cart.cartItems, cart.shippingAddress, cart.paymentMethod, productsPrice, transCost, totalPay, '');\n\n    dispatch(createOrder(order));\n  }\n\n  const orderCreate = useSelector((state: State) => state.orderState);\n  const { order, error, success } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order?._id}`)\n    }\n  }, [history, order, success])\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>收货地址</h2>\n              <p>\n                <strong>收件人地址: </strong>\n                {shippingAddress?.province},\n                {shippingAddress?.city},\n                {shippingAddress?.address}\n              </p>\n              <p>\n                <strong>邮政编码: </strong>\n                {shippingAddress?.postalCode}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>支付方式</h2>\n              <strong>支付方法: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>产品订单</h2>\n              {\n                cart.cartItems.length === 0 ?\n                  <Message>购物车为空</Message>\n                  :\n                  <ListGroup variant='flush'>\n                    {\n                      cart.cartItems.map((item, index) =>\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image src={item.image} alt={item.name} fluid rounded />\n                            </Col>\n                            <Col>\n                              <Link to={`/products/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.count} * {item.price} = ¥ {item.count * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      )\n                    }\n                  </ListGroup>\n              }\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>确认账单</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>产品总价</Col>\n                  <Col>\n                    ¥ {productsPrice}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>运费</Col>\n                  <Col>\n                    ¥ {transCost}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>合计</Col>\n                  <Col>\n                    ¥ {totalPay}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button type='button' className='btn-block' onClick={placeorderHandler} disabled={cart.cartItems.length === 0}>\n                  提交订单\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect, useState } from 'react'\nimport { Col, Row, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport Rating from '../components/Rating'\nimport { State } from '../models/State'\nimport { listProductDetails } from '../redux/actions/product'\n\nconst ProductScreen = ({ history, match }: any) => {\n  const [count, setCount] = useState<number>(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector((state: State) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  // 路由更新时调用。deps: [match]\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?count=${count}`);\n  }\n\n  return (\n    <>\n      <Link to='/' className='btn btn-dark my-3'>返回商城</Link>\n\n      {\n        loading ? <Loading /> : error ? <Message variant='danger' children={error} /> :\n          (\n            <Row>\n              <Col md={6}>\n                <Image src={product?.image} alt={product?.name} fluid></Image>\n              </Col>\n              <Col md={3}>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <h3>{product?.name}</h3>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Rating value={product?.rating ? product.rating : 0} text={`${product?.numReviews}条评论`} />\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    价格：¥{product?.price}\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    描述：{product?.description}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n              <Col md={3}>\n                <Card>\n                  <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>价格：</Col>\n                        <Col>\n                          <strong>¥{product?.price}</strong>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>库存：</Col>\n                        <Col>\n                          {product?.countInStock && product.countInStock > 0 ? '有货' : '没货'}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>购买数量：</Col>\n                        <Col>\n                          <Form.Control as='select' value={count} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCount(+e.target.value)}>\n                            {\n                              [...Array(product?.countInStock).keys()]\n                                .map((i) => i + 1)\n                                .map((i) => (\n                                  <option key={i} value={i}>{i}</option>\n                                ))\n                            }\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      <Button\n                        type='button'\n                        className='btn-block'\n                        disabled={product?.countInStock === 0}\n                        onClick={addToCartHandler}>\n                        添加到购物车\n                      </Button>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n            </Row>\n          )\n      }\n\n    </>\n  )\n}\n\nexport default ProductScreen\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { Button, Col, Form, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport { State } from '../models/State'\nimport User from '../models/User'\nimport { getUserDetails, updateUserDetails } from '../redux/actions/user'\n\nconst ProfileScreen = ({ history }: any) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state: State) => state.userDetails);\n  const { loading, user, error, updated } = userDetails;\n\n  const userLogin = useSelector((state: State) => state.userLogin);\n  const loginUser = userLogin.user;\n\n  useEffect(() => {\n    if (!loginUser) {\n      history.push('/login')\n    } else {\n      if (!user || (user && !user.name)) {\n        if (!updated) dispatch(getUserDetails())\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, user, loginUser, updated]);\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    dispatch(updateUserDetails(user ? new User(user.id, name, email, user.token, password): null))\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>个人资料  </h2>\n        {!error && updated && <Message variant='success'>Update Success</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>用户名:</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='请输入用户名'\n              value={name}\n              onChange={(e) => setName(e.target.value)}>\n            </Form.Control>\n          </Form.Group>`\n\n        <Form.Group controlId='email'>\n            <Form.Label>邮箱地址:</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='请输入邮箱'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>密码:</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='请输入密码'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label>确认密码:</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='请重复密码'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}>\n            </Form.Control>\n          </Form.Group>\n          <Button type='submit' variant='primary'>更改资料</Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>我的订单</h2>\n      </Col>\n    </Row>\n  )\n\n}\n\nexport default ProfileScreen;\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { Button, Col, Form, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport { State } from '../models/State'\nimport { register } from '../redux/actions/user'\n\nconst RegisterScreen = ({ location, history }: any) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const userRegister = useSelector((state: State) => state.userRegister);\n  const { loading, user, error } = userRegister;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('两次密码不匹配');\n    } else {\n      dispatch(register(name, email, password));\n    }\n\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(redirect)\n    }\n  }, [history, user, redirect])\n\n  return (\n    <FormContainer>\n      <h1>注册</h1>\n      { message && <Message variant='danger'>{message}</Message>}\n      { error && <Message variant='danger'>{error}</Message>}\n      { loading && <Loading />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>用户名:</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='请输入用户名'\n            value={name}\n            onChange={(e) => setName(e.target.value)}>\n          </Form.Control>\n        </Form.Group>`\n\n        <Form.Group controlId='email'>\n          <Form.Label>邮箱地址:</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='请输入邮箱'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>密码:</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='请输入密码'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>确认密码:</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='请重复密码'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}>\n          </Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>注册</Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          已有账号？\n          <Link to={redirect ? ('/login?redirect=' + redirect) : '/login'}>去登录</Link>\n        </Col>\n      </Row>\n\n    </FormContainer>\n  )\n\n}\n\nexport default RegisterScreen;\n","class ShippingAddress {\n  public province: string;\n  public city: string;\n  public address: string;\n  public postalCode: string;\n\n  constructor(province: string, city: string, address: string, postalCode: string) {\n    this.province = province;\n    this.city = city;\n    this.address = address;\n    this.postalCode = postalCode;\n  }\n}\n\nexport default ShippingAddress;\n","import React, { FormEvent, useState } from 'react'\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport FormContainer from '../components/FormContainer';\nimport ShippingAddress from '../models/ShippingAddress';\nimport { State } from '../models/State';\nimport { saveShippingAddress } from '../redux/actions/cart';\n\nconst ShippScreen: React.FunctionComponent<RouteComponentProps> = ({ history }) => {\n  const cart = useSelector((state: State) => state.cart)\n  const { shippingAddress } = cart;\n\n  const [province, setProvince] = useState(shippingAddress ? shippingAddress.province : '');\n  const [city, setCity] = useState(shippingAddress ? shippingAddress.city : '');\n  const [address, setAddress] = useState(shippingAddress ? shippingAddress.address : '');\n  const [postalCode, setPostalCode] = useState(shippingAddress ? shippingAddress.postalCode : '');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress(new ShippingAddress(province, city, address, postalCode)));\n    history.push('/payment');\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n\n      <h1>收货地址</h1>\n\n      <Form onSubmit={submitHandler}>\n\n        <Form.Group controlId='province'>\n          <Form.Label>省份</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='请输入所在省份'\n            value={province}\n            onChange={(e) => setProvince(e.target.value)}></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>城市</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='请输入所在城市'\n            value={city}\n            onChange={(e) => setCity(e.target.value)}></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='address'>\n          <Form.Label>详细地址</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='请输入详细地址'\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>邮政编码</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='请输入邮政编码'\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>下一步</Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippScreen\n","import React, { useEffect } from 'react'\nimport { Button, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Loading from '../components/Loading';\nimport Message from '../components/Message';\nimport { State } from '../models/State';\nimport { listUser } from '../redux/actions/user';\n\nconst UserListScreen = () => {\n\n  const dispatch = useDispatch();\n  const userList = useSelector((state: State) => state.userList);\n  const { loading, users, error } = userList;\n\n  useEffect(() => {\n    dispatch(listUser())\n  }, [dispatch])\n\n  const deleteHandler = () => { }\n\n  return (\n    <>\n      <h1>用户列表</h1>\n      {\n        loading ?\n          <Loading /> :\n          error ?\n            <Message variant='danger'>{error}</Message> :\n            (\n              <Table striped bordered hover responsive className='table-sm'>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>姓名</th>\n                    <th>邮箱</th>\n                    <th>管理员</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    users.map((user) => (\n                      <tr key={user.id}>\n                        <td>{user.id}</td>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        <td>\n                          {\n                            user.isAdmin ?\n                              (<i className='fas fa-check' style={{ color: '#00FF00' }}></i>) :\n                              (<i className='fas fa-times' style={{ color: '#FF0000' }}></i>)\n                          }\n                        </td>\n                        <td>\n                          <LinkContainer to={`/admin/user/${user.id}`}>\n                            <Button variant='light' className='btn-sm'>\n                              <i className='fas fa-edit'></i>\n                            </Button>\n                          </LinkContainer>\n                          <Button variant='danger' className='btn-sm' onClick={deleteHandler}>\n                            <i className='fas fa-trash'></i>\n                          </Button>\n                        </td>\n                      </tr>\n                    ))\n                  }\n                </tbody>\n              </Table>\n            )\n      }\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { Button, Col, Form, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport Loading from '../components/Loading'\nimport Message from '../components/Message'\nimport { State } from '../models/State'\nimport { login } from '../redux/actions/user'\n\nconst UserLoginScreen = ({ location, history }: any) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const userLogin = useSelector((state: State) => state.userLogin);\n  const { loading, user, error } = userLogin;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  \n  const dispatch = useDispatch();\n\n  const submitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  }\n\n  useEffect(() => {\n    if (user) {\n      history.push(redirect)\n    }\n  }, [ history, user, redirect ])\n\n  return (\n    <FormContainer>\n      <h1>登录</h1>\n      { error && <Message variant='danger'>{ error }</Message> }\n      { loading && <Loading /> }\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>邮箱地址:</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='请输入邮箱'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}>\n          </Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>密码:</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='请输入密码'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}>\n          </Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>登录</Button>\n      </Form>\n      <Row className='py-3'>\n        <Col>\n          新用户？\n          <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>去注册</Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default UserLoginScreen\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport CartScreen from './screens/CartScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ShippScreen from './screens/ShippScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserLoginScreen from './screens/UserLoginScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/shipping' component={ShippScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/login' component={UserLoginScreen} />\n          <Route path='/admin/userList' component={UserListScreen} />\n          <Route path='/products/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// redux的store中传递的基本结构\n\nclass BaseState {\n  public loading: boolean;\n  public error: any;\n\n  constructor(loading: boolean, error: any) {\n    this.loading = loading;\n    this.error = error;\n  }\n}\n\nexport default BaseState;\n","import ShippingAddress from './ShippingAddress';\n// redux相关\n// 存储本应用的所有状态结构\n\nimport BaseState from './Base';\nimport CartItem from './CartItem';\nimport Product from './Product';\nimport User from './User';\nimport Order from './Order';\n\n\ninterface State {\n  productList: ProductList,\n  productDetails: ProductDetails,\n  cart: Cart,\n  userLogin: UserLogin,\n  userRegister: UserRegister,\n  userDetails: UserDetails,\n  orderState: OrderState,\n  orderDetails: OrderState,\n  userList: UserList\n}\n\nclass OrderState extends BaseState {\n  public order: Order | null;\n  public success: boolean;\n\n  constructor(loading: boolean, order: Order | null, error: any, success: boolean) {\n    super(loading, error);\n    this.order = order;\n    this.success = success;\n  }\n}\n\n\nclass Cart extends BaseState {\n  public cartItems: CartItem[];\n  public shippingAddress: ShippingAddress;\n  public paymentMethod: string;\n\n  constructor(loading: boolean, cartItems: CartItem[], error: any, shippingAddress: ShippingAddress, paymentMethod: string) {\n    super(loading, error);\n    this.cartItems = cartItems;\n    this.shippingAddress = shippingAddress;\n    this.paymentMethod = paymentMethod;\n  }\n}\n\n\nclass ProductList extends BaseState {\n  public products: Product[];\n\n  constructor(loading: boolean, products: Product[], error: any) {\n    super(loading, error);\n    this.products = products;\n  }\n\n}\n\nclass ProductDetails extends BaseState {\n  public product: Product | null;\n\n  constructor(loading: boolean, product: Product | null, error: any) {\n    super(loading, error);\n    this.product = product;\n  }\n}\n\nclass UserList extends BaseState {\n  public users: User[];\n\n  constructor(loading: boolean, users: User[], error: any) {\n    super(loading, error);\n    this.users = users;\n  }\n}\n\nclass UserLogin extends BaseState {\n  public user: User | null;\n\n  constructor(loading: boolean, user: User | null, error: any) {\n    super(loading, error);\n    this.user = user;\n  }\n}\n\nclass UserRegister extends BaseState {\n  public user: User | null;\n\n  constructor(loading: boolean, user: User | null, error: any) {\n    super(loading, error);\n    this.user = user;\n  }\n}\n\nclass UserDetails extends BaseState {\n  public user: User | null;\n  public updated: boolean;\n\n  constructor(loading: boolean, user: User | null, error: any, updated: boolean) {\n    super(loading, error);\n    this.user = user;\n    this.updated = updated;\n  }\n}\n\n\nexport {\n  ProductList,\n  ProductDetails,\n  Cart,\n  UserLogin,\n  UserRegister,\n  UserDetails,\n  OrderState,\n  UserList\n};\n\nexport type { State };\n\n","import { orderCreateReducer, orderDetailsReducer } from './reducers/order';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Cart, OrderState, ProductDetails, ProductList, UserDetails, UserList, UserLogin, UserRegister } from '../models/State';\nimport { cartReducer } from './reducers/cart';\nimport { productDetailsReducer, productListReducer } from './reducers/product';\nimport { userDetailReducer, userListReducer, userLoginReducer, userRegisterReducer } from './reducers/user';\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailReducer,\n  orderState: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  userList: userListReducer\n});\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse('' + localStorage.getItem('cartItems')) : [];\nconst userFromStorage = localStorage.getItem('user') ? JSON.parse('' + localStorage.getItem('user')) : null;\nconst shippingAddress = localStorage.getItem('shippingAddress') ? JSON.parse('' + localStorage.getItem('shippingAddress')) : null;\nconst paymentMethod = localStorage.getItem('paymentMethod') ? JSON.parse('' + localStorage.getItem('paymentMethod')) : null;\n\nconst initialState = {\n  productList: new ProductList(false, [], null),\n  productDetails: new ProductDetails(false, null, null),\n  cart: new Cart(false, cartItemsFromStorage, null, shippingAddress, paymentMethod),\n  userLogin: new UserLogin(false, userFromStorage, null),\n  userRegister: new UserRegister(false, null, null),\n  userDetails: new UserDetails(false, null, null, false),\n  orderState: new OrderState(false, null, null, false),\n  orderDetails: new OrderState(false, null, null, false),\n  userList: new UserList(false, [], null)\n};\n\nconst middlewares = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlewares)));\n\nexport default store;\n","import myAction from '../../models/Action';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILED, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILED } from '../../constant/product';\nimport { ProductList, ProductDetails } from '../../models/State';\n\nconst productListReducer = (state = new ProductList(false, [], null), action: myAction) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, error: null, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, error: null, products: action.payload }\n    case PRODUCT_LIST_FAILED:\n      return { loading: false, error: action.payload, products: state.products }\n    default:\n      return state;\n  }\n}\n\nconst productDetailsReducer = (state = new ProductDetails(false, null, null), action: myAction) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, error: null, product: null }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, error: null, product: action.payload }\n    case PRODUCT_DETAILS_FAILED:\n      return { loading: false, error: action.payload, product: state.product }\n    default:\n      return state;\n  }\n}\n\nexport {\n  productListReducer,\n  productDetailsReducer\n};\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from './../../constant/cart';\nimport myAction from \"../../models/Action\";\nimport { Cart } from \"../../models/State\";\nimport ShippingAddress from '../../models/ShippingAddress';\n\nexport const cartReducer = (state: Cart = new Cart(false, [], null, new ShippingAddress('', '', '', ''), ''), action: myAction) => {\n  switch (action.type) {\n    case CART_ADD_ITEM: {\n      const item = action.payload;\n\n      const existedItem = state.cartItems.find((c) => c.product === item.product);\n\n      if (existedItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((c) => c.product === existedItem.product ? item : c)\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        }\n      }\n    }\n    case CART_REMOVE_ITEM: {\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((c) => c.product !== action.payload)\n      }\n    }\n    case CART_SAVE_SHIPPING_ADDRESS: {\n      return {\n        ...state,\n        shippingAddress: action.payload\n      }\n    }\n    case CART_SAVE_PAYMENT_METHOD: {\n      return {\n        ...state,\n        paymentMethod: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n}","import { USER_LOGIN, USER_LOGIN_FAILED, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER, USER_REGISTER_SUCCESS, USER_REGISTER_FAILED, USER_DETAILS, USER_DETAILS_SUCCESS, USER_DETAILS_FAILED, USER_UPDATE, USER_UPDATE_SUCCESS, USER_UPDATE_FAILED, USER_LIST, USER_LIST_SUCCESS, USER_LIST_FAILED } from './../../constant/user';\nimport myAction from \"../../models/Action\";\nimport { UserDetails, UserList, UserLogin } from \"../../models/State\";\n\n\nconst userLoginReducer = (state = new UserLogin(false, null, null), action: myAction) => {\n  switch (action.type) {\n    case USER_LOGIN:\n      return { loading: true, error: null, user: null }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, error: null, user: action.payload }\n    case USER_LOGIN_FAILED:\n      return { loading: false, error: action.payload, user: null }\n    case USER_LOGOUT:\n      return new UserLogin(false, null, null)\n    default:\n      return state;\n  }\n}\n\nconst userRegisterReducer = (state = new UserLogin(false, null, null), action: myAction) => {\n  switch (action.type) {\n    case USER_REGISTER:\n      return { loading: true, error: null, user: null }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, error: null, user: action.payload }\n    case USER_REGISTER_FAILED:\n      return { loading: false, error: action.payload, user: null }\n    default:\n      return state;\n  }\n}\n\n\nconst userDetailReducer = (state = new UserLogin(false, null, null), action: myAction) => {\n  switch (action.type) {\n    case USER_DETAILS:\n      return new UserDetails(true, null, null, false)\n    case USER_DETAILS_SUCCESS:\n      return new UserDetails(false, action.payload, null, false)\n    case USER_DETAILS_FAILED:\n      return new UserDetails(false, null, action.payload, false)\n    case USER_UPDATE:\n      return new UserDetails(true, null, null, false)\n    case USER_UPDATE_SUCCESS:\n      return new UserDetails(false, action.payload, null, true)\n    case USER_UPDATE_FAILED:\n      return new UserDetails(false, null, action.payload, false)\n    default:\n      return state;\n  }\n}\n\nconst userListReducer = (state = new UserList(false, [], null), action: myAction) => {\n  switch (action.type) {\n    case USER_LIST:\n      return new UserList(true, [], null)\n    case USER_LIST_SUCCESS:\n      return new UserList(false, action.payload, null)\n    case USER_LIST_FAILED:\n      return new UserList(false, [], action.payload)\n    default:\n      return state;\n  }\n}\n\n\nexport { userLoginReducer, userRegisterReducer, userDetailReducer, userListReducer };\n","import { ORDER_CREATE, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAILED, ORDER_DETAILS, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAILED } from './../../constant/order';\nimport myAction from \"../../models/Action\";\nimport { OrderState } from '../../models/State';\n\n\nexport const orderCreateReducer = (state = new OrderState(false, null, null, false), action: myAction) => {\n  switch (action.type) {\n    case ORDER_CREATE:\n      return new OrderState(true, null, null, false)\n    case ORDER_CREATE_SUCCESS:\n      return new OrderState(false, action.payload, null, true)\n    case ORDER_CREATE_FAILED:\n      return new OrderState(false, null, action.payload, false)\n    default:\n      return state;\n  }\n}\n\nexport const orderDetailsReducer = (state = new OrderState(false, null, null, false), action: myAction) => {\n  switch (action.type) {\n    case ORDER_DETAILS:\n      return new OrderState(true, null, null, false)\n    case ORDER_DETAILS_SUCCESS:\n      return new OrderState(false, action.payload, null, true)\n    case ORDER_DETAILS_FAILED:\n      return new OrderState(false, null, action.payload, false)\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}